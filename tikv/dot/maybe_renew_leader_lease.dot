#include "styles.h"
digraph maybe_renew_leader_lease{
  node[shape=box;style="rounded";color="#1c2123";fontcolor="#2f3638"];
  edge[color=gray40];
  newrank=true;
  rankdir=LR;

  Progress[style_func;label="{{
    Progress|
    Region(metapb::Region),\l|
    Term(u64),\l|
    AppliedIndexTerm(u64),\l|
    LeaderLease(RemoteLease),\l
  }}"]

  Peer__set_region -> {
     Peer__maybe_update_read_progress;
     ReadProgress;
  }

  Peer__maybe_update_read_progress -> ReaderDelegate__update;
  ReaderDelegate__update -> {
    ReaderDelegate__fresh_valid_ts;
    TrackVer__inc;
  }
  Peer__maybe_renew_leader_lease -> {
    LeaderLease__maybe_new_remote_lease;
    Peer__maybe_update_read_progress;
    Lease__renew;
    StoreMeta__lock__readers;
  }
  StoreMeta__lock__readers[style_func;label="{{
    StoreMeta.lock()\l
    .readers.get_mut()\l
    加锁获取regionID对应的\l
    ReadDelegate\l
  }}"]

  {Progress;StoreMeta__lock__readers} -> ReaderDelegate__update[style_edge_data];
  Peer__maybe_renew_leader_lease[style_blue1;label="{{
    Peer\l
    maybe_renew_leader_lease\l|
    try to renew leader lease\l|
    1.如果正在spliting/merging则不会更新\l
    2.如果自己是leader且\l
    read_progress不为None\l
    则尝试更新read_progress\l
  }}"]
  Lease__renew -> RemoteLease__renew;
  RemoteLease__renew[style_func;label="{{
    RemoteLease\l
    renew\l|
    使用ts刷新leader lease\l
  }}"]

  LeaderLease__maybe_new_remote_lease[style_func;label="{{
    LeaderLease\l
    maybe_new_remote_lease\l|
    Return a new `RemoteLease`\l
    if there is none\l
  }}"]
  LeaderLease__maybe_new_remote_lease -> RemoteLease;
  RemoteLease[style_func;label="{{
    RemoteLease|
    新建一个RemoteLease\l
    然后返回它的clone\l
    在后面ReaderDelegate\l
    update时会使用它\l
  }}"]
  RemoteLease -> Progress[style_edge_data];
  Peer__maybe_update_read_progress[style_func;label="{{
    Peer\l
    maybe_update_read_progress\l|
    如果在pending_remove阶段\l
    就不用更新ReadDelegate了\l
  }}"]
  Lease__renew[style_func;label="{{
    Lease\l
    renew\l|
    使用ts更新lease\l
  }}"]
  ReaderDelegate__update[style_blue1;label="{{
    ReaderDelegate\l
    update\l|
    1.更新自己的track ver\l
    2.根据Progress更新自己\l
    的成员变量\l
  }}"]
  Peer__set_region[style_func;label="{{
    Peer\l
    set_region\l|
    更新ReadDelegate\l
    的region\l
  }}"]

  TrackVer__inc[style_func;label="{{
    TrackVer.inc|
    增加version\l
  }}"]
  LocalReader__get_delegate -> TrackVer__any_new -> TrackVer__inc[style_edge_data]
  LocalReader__get_delegate[style_func;label="{{
    LocalReader\l
    get_delegate\l|
    track ver版本发生了变化\l
    LocalReader需要重新去\
    StoreMeta.readers\l
    获取reader\l
  }}"]
  ReaderDelegate__fresh_valid_ts[style_func;label="{{
    ReaderDelegate\l
    fresh_valid_ts\l
  }}"]
}
