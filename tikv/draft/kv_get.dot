digraph kv_get {
  node[shape=box];
  edge[color=gray40];
  newrank=true;
  rankdir=LR;
  subgraph cluster_ReadPoolHandle {
    graph[label="ReadPoolHandle";fontsize=20;];
    ReadPoolHandle_spawn_handle;
  }

  subgraph cluster_TraitPeekable {
    graph[label="TraitPeekable";fontsize=20;];
    get_value_cf_opt;
  }

  subgraph cluster_RocksSnapshot {
    graph[label="RocksSnapshot";fontsize=20;];
    RocksSnapshot[
      shape="record";
      label="{{
        RocksSnapshot|
        <get_cf> get_cf\l
      }}";
    ];
    RocksSnapshot:get_cf -> get_value_cf -> get_value_cf_opt;
    get_value_cf_opt -> {
      get_cf_handle;
      get_cf_opt;
      RocksDBVector_from_raw;
    }
    get_cf_opt -> {
      crocksdb_get_pinned_cf;
    }
  }

  subgraph cluster_RegionSnapshot {
    graph[label="RegionSnapshot";fontsize=20;];
    RegionSnapshot[
      shape="record";
      label="{{
        RegionSnapshot|
        fn get\l|
        fn get_cf\l|
      }}";
    ];
    
  }
  subgraph cluster_TraitSnapShort {
    graph[label="TraitSnapShort";fontsize=20;];
    Snapshot[
      shape="record";
      label="{{
        Snapshot|
        <get_cf> fn get_cf\l|
        fn get\l|
        fn iter\l|
        fn iter_cf\l
      }}";
    ];
    Snapshot -> {
      RegionSnapshot;
      BTreeEngineSnapshot;
      RocksSnapshot;
    };
    BTreeEngineSnapshot[
      shape="record";
      label="{{
        BTreeEngineSnapshot
      }}";
    ];
    RocksSnapshot[
      shape="record";
      label="{{
        RocksSnapshot
      }}";
    ];
  }
  subgraph cluster_SnapshotStore {
    graph[label="SnapshotStore";fontsize=20;];
    SnapshotStore_get ->{
      PointGetterBuilder;
      PointGetter_get;
    }
    PointGetter_get -> {
      load_and_check_lock;
      load_data;
    };
    load_data -> {
      load_data_from_default_cf;
    }
    load_data_from_default_cf -> {
      Snapshot:get_cf;
    }
    load_and_check_lock -> {
      check_ts_conflict;
      Snapshot:get_cf;
    }
  }

  subgraph cluster_Storage {
    graph[label="Storage";fontsize=20;];
    storage_get -> {
      CommandKind_get;
      ReadPoolHandle_spawn_handle;
      with_tls_engine;
      SnapshotStore_new;
      SnapshotStore_get;
    }
    
  }
  subgraph cluster_KvService {
    graph[label="KvService";fontsize=20;];
    kv_get -> handle_request -> future_get -> {
      storage_get;
    };
  }
}
