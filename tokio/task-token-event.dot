//
// task-token-event.dot
//
// Created on 28-09-2019 by xieyu
//
digraph task_token_event {
  rankdir=LR
  newrank=true
  node[shape=box];
  subgraph cluster_current_thread{
    graph[label="current thread";fontsize=20;style=rounded]
    _Node[label="Node"]
    task -> _Node[label="Scheduler.schedule";style=dashed;color=gray60;labelfontcolor=gray60];
    _Node -> waker_ref[label="Scheculer.tick";style=dashed;color=gray60];
  }

  subgraph cluster_thread_pool{
    graph[label="thread pool";fontsize=20;style=rounded]

    subgraph cluster_pool{
      graph[label="pool";fontsize=15;]
      submit_external -> singal_work
    }
    subgraph cluster_worker {
      graph[label="worker";fontsize=15;]
      worker_run[label=run];
    }

    subgraph cluster_task{
      graph[label="task";fontsize=15;]
      task_run[label=run];
    }
    singal_work -> worker_run -> task_run[style=dashed];
    task_run -> waker[label="new"]
  }

  subgraph cluster_context {
    graph[label="context";fontsize=20;style=rounded]
    ctx;
  }

  subgraph cluster_future {
    graph[label="future";fontsize=20;style=rounded]
    task_poll[label="poll"]
  }

  subgraph cluster_driver {
    graph[label="driver";fontsize=20;style=rounded]
    Reactor -> ScheduleIo[label="io_dispatch"];
    ScheduleIo -> {reader, writer};
  }

  subgraph cluster_mio {
    graph[label="mio";fontsize=20;style=rounded]
    event_token[label="event.token"]
    mio_poll[label="poll"]
    mio_poll -> event_token;
    mio_register[label="register"];
  }

  event_token ->Reactor[label="dispatch"];
  task_poll -> ScheduleIo[label="set";style=dashed];
  task_poll -> mio_register[label="set";style=dashed];

  {reader, writer} -> ctx[label="related to"; style=dashed;];
  waker_ref -> ctx [label="3.from_waker"];
  waker -> ctx[label="pass to"];
  ctx -> task_poll [label="pass_to"];
}
